/*! string2regex - v0.0.1 - 2014-10-20
* Copyright (c) 2014 ; Licensed  */
angular.module("string2regex",[]).value("String2RegexConfiguration",{groupColors:["#F5A9A9","#F3E2A9","#D0F5A9","#A9F5BC","#A9F5F2","#A9BCF5","#D0A9F5","#F5A9E1"],characterClassFunction:function(a){var b=[];return a>="0"&&"9">=a&&b.push("number"),a>="a"&&"z">=a&&b.push("lowercase"),a>="A"&&"Z">=a&&b.push("uppercase"),(_.contains(b,"lowercase")||_.contains(b,"uppercase"))&&b.push("alphabet"),(_.contains(b,"alphabet")||_.contains(b,"number"))&&b.push("alphanumerical"),b.push(" "===a?"space":"nonspace"),_.contains(b,"alphanumerical")||_.contains(b,"space")||b.push("symbol"),b.push("any"),b},defaultClass:"any"}).controller("String2RegexCtrl",["$scope","String2RegexConfiguration",function(a,b){function c(a){for(var b=i(a[0]),c=1;c<a.length;c++){var d=i(a[c]);b=_.intersection(d,b)}return b}function d(a,b){if(void 0===b&&(b=0),a.length<=1)return[];for(var d=[],f=c(a),g=_.difference(i(a[0]),f),h=0,j="",k=1;k<a.length;k++){var l=(a[k],_.difference(i(a[k]),f));0===_.intersection(l,g).length?(j=a.substring(h,k),d.push(e(j,b)),g=l,h=k):g=_.intersection(l,g)}return 0===h?(console.log("Apparently same group"),[]):(j=a.substring(h,a.length),d.push(e(j,b)),d)}function e(a,b){void 0===b&&(b=0);var e={picked:!1,string:a,getSize:function(){return this.string.length},getGroupColor:function(){return f(this.depth)},commonClass:c(a,b),depth:b,selectedClass:"",hasSelected:function(){if(""!==this.selectedClass)return!0;var a=_.find(this.childs,function(a){return a.hasSelected()});return void 0!==a},ensureSelection:function(){_.any(this.childs,function(a){return a.hasSelected()})?(this.selectedClass="",_.each(this.childs,function(a){a.ensureSelection()})):this.selectedClass=j},ensureNoSelection:function(){this.selectedClass="",_.each(this.childs,function(a){a.ensureNoSelection()})},select:function(a){this.ensureNoSelection(),this.selectedClass=a},childs:d(a,b+1)};return e}function f(a){return h[a%h.length]}var g=a.holder,h=b.groupColors,i=b.characterClassFunction,j=b.defaultClass;a.getCharacterClass=i,a.getCommonCharacterClass=c,a.generateChildGroups=d,a.generateGroup=e,a.getColorForDepth=f,a.group=e(g.sample),a.group.ensureSelection()}]).directive("string2regex",function(){return{scope:{holder:"=string2regex"},controller:"String2RegexCtrl",link:function(){},templateUrl:"string2regex-template.html"}}).directive("string2regexGroup",["RecursionHelper",function(a){return{scope:{group:"=string2regexGroup"},link:function(){},compile:function(b){return a.compile(b)},templateUrl:"string2regex-template-group.html"}}]).factory("RecursionHelper",["$compile",function(a){return{compile:function(b,c){angular.isFunction(c)&&(c={post:c});var d,e=b.contents().remove();return{pre:c&&c.pre?c.pre:null,post:function(b,f){d||(d=a(e)),d(b,function(a){f.append(a)}),c&&c.post&&c.post.apply(null,arguments)}}}}}]);
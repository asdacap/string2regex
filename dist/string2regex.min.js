/*! string2regex - v0.0.1 - 2014-10-19
* Copyright (c) 2014 ; Licensed  */
angular.module("string2regex",[]).controller("String2RegexCtrl",function(a){function b(a){var b=[];return a>="0"&&"9">=a&&b.push("number"),a>="a"&&"z">=a&&b.push("lowercase"),a>="A"&&"Z">=a&&b.push("uppercase"),(_.contains(b,"lowercase")||_.contains(b,"uppercase"))&&b.push("alphabet"),(_.contains(b,"alphabet")||_.contains(b,"number"))&&b.push("alphanumerical"),b.push(" "===a?"space":"nonspace"),_.contains(b,"alphanumerical")||_.contains(b,"space")||b.push("symbol"),b}function c(a){for(var c=b(a[0]),d=1;d<a.length;d++){var e=b(a[d]);c=_.intersection(e,c)}return c}function d(a){if(a.length<=1)return[];for(var d=[],f=c(a),g=_.difference(b(a[0]),f),h=0,i="",j=1;j<a.length;j++){var k=(a[j],_.difference(b(a[j]),f));0===_.intersection(k,g).length?(i=a.substring(h,j),d.push(e(i)),g=k,h=j):g=_.intersection(k,g)}return 0===h?(console.log("Apparently same group"),[]):(i=a.substring(h,a.length),d.push(e(i)),d)}function e(a){var b={picked:!1,string:a,getSize:function(){return this.string.length},commonClass:c(a),childs:d(a)};return b}var f=a.holder;a.getCharacterClass=b,a.getCommonCharacterClass=c,a.generateChildGroups=d,a.generateGroups=e,a.groups=e(f.sample)}).directive("string2regex",function(){return{scope:{holder:"=string2regex"},controller:"String2RegexCtrl",link:function(){},templateUrl:"string2regex-template.html"}});